@page "/Accounts/{accountId:int}/CreditCardModification"

@inject ICreditAccount CreditController;

<h3>Credit Card Modification</h3>


<form>
    @if (ErrorAlert.isError)
    {
        <ErrorAlert errorTxt="@errorTxt" />
    }
    <br />

    <div class="form-group">
        <label for="title">IssuingBank</label>
        <input type="text" class="form-control" id="title" @bind="issuingBank" />
    </div>
    <div class="form-group">
        <label for="title">Last 4 Digits Of Card</label>
        <input type="text" class="form-control" id="title" @bind="last4Digits" />
    </div>
    <div class="form-group">
        <label for="title">Closing Date</label>
        <input type="date" class="form-control" id="title" @bind="closingDate" />
    </div>
    <br />
    <div>
        <button type="button" class="btn btn-primary" @onclick="SaveChanges">Guardar cambios</button>
        <a href="/Accounts">Cancelar</a>
    </div>

    @if (SuccesAlert.IsSucess)
    {
        <SuccesAlert errorTxt="Credit card edited successfully" />
    }
</form>



@code
{

    private string issuingBank;
    private string last4Digits;
    private DateTime creationDate;
    private DateTime closingDate;


    [CascadingParameter]
    public UserDTO UserConnected { get; set; }

    [Parameter]
    public int accountId { get; set; }

    public string errorTxt { get; set; }

    private CreditCardAccountDTO accountToUpdate;
    private CreditCardAccountDTO accountUpdated;

    protected override void OnInitialized()
    {

        accountToUpdate = CreditController.FindCreditAccount(accountId,UserConnected.UserId);
        issuingBank = accountToUpdate.IssuingBank;
        last4Digits = accountToUpdate.Last4Digits;
        closingDate = accountToUpdate.ClosingDate;
        ErrorAlert.isError = false;
        SuccesAlert.IsSucess = false;
    }

    private void SaveChanges()
    {
        try
        {
            accountUpdated = new CreditCardAccountDTO(accountToUpdate.Name, accountToUpdate.Currency, creationDate, issuingBank, last4Digits, accountToUpdate.AvailableCredit, closingDate, UserConnected.UserId);
            accountUpdated.AccountId = accountId;
            CreditController.UpdateCreditAccount(accountUpdated);
            NavigationManager.NavigateTo("/Accounts");
        }
        catch(Exception ExceptionAccount)
        {
            errorTxt = ExceptionAccount.Message;
            ErrorAlert.ShowErrorAlert();
        }



    }


}
