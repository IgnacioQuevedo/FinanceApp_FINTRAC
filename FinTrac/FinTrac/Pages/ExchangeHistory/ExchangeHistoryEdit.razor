@page "/ExchangeHistories/{ExchangeId:int}/Edit"
@inject IExchangeHistoryController ExchangeHistoryController

<h3>ExchangeHistoryEdit</h3>

<div>
    @if (ErrorAlert.isError)
    {
        <ErrorAlert errorTxt="@errorTxt" />
    }
</div>


<div class="form-group">
    <label for="title">Value of Exchange to Register</label>
    <input type="number" class="form-control" id="Name" @bind="newValue" />
</div>

<button type="button" class="btn btn-primary" @onclick="UpdateExchange">Guardar cambios</button>
<a href="/ExchangeHistories">Cancelar</a>


@code
{
    [CascadingParameter]
    public UserDTO userConnected { get; set; }

    [Parameter]
    public int ExchangeId { get; set; }
    public string errorTxt { get; set; }

    private ExchangeHistoryDTO exchangeWithoutUpdate;
    private ExchangeHistoryDTO exchangeUpdated;
    private decimal newValue;

    protected override void OnInitialized()
    {
        exchangeWithoutUpdate = ExchangeHistoryController.FindExchangeHistory(ExchangeId, userConnected.UserId);
        newValue = exchangeWithoutUpdate.Value;
        ErrorAlert.isError = false;
        SuccesAlert.IsSucess = false;
    }

    private void UpdateExchange()
    {
        try
        {
            exchangeUpdated = new ExchangeHistoryDTO(exchangeWithoutUpdate.Currency, newValue, exchangeWithoutUpdate.ValueDate,userConnected.UserId);
            exchangeUpdated.ExchangeHistoryId = ExchangeId;

            ExchangeHistoryController.UpdateExchangeHistory(exchangeUpdated);
            NavigationManager.NavigateTo("/ExchangeHistories");
        }
        catch(Exception ExceptionExchangeHistory)
        {
            ErrorAlert.ShowErrorAlert();
            errorTxt = ExceptionExchangeHistory.Message;
        }

    }
}
