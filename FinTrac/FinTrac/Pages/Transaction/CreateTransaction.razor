@page "/Transactions/{accountId:int}/CreateTransaction"

@using BusinessLogic.Account_Components;
@using BusinessLogic.Transaction_Components;
@using BusinessLogic.Category_Components;
@using BusinessLogic.ExchangeHistory_Components;

<h3>Transaction Creation</h3>


<form>
    <div class="form-group">
        <label for="title">Title</label>
        <input type="text" class="form-control" id="Name" @bind="title" />
    </div>

    <br />

    <div>
        <label for="title">Creation Date</label>
        <input type="date" class="form-control" id="creationDate" @bind="creationDate" />
    </div>

    <br />

    <div>
        <label for="title">Amount</label>
        <input type="number" class="form-control" id="InitialAmount" @bind="amount" />
    </div>

    <div>
        <label for="title">Currency Type</label>
        <select class="form-select" aria-label="Default select example">

            <option value="@accountSelected.Currency">@accountSelected.Currency</option>
        </select>
    </div>

    <br />

    <div>
        <label for="title">Type</label>
        <select class="form-select" aria-label="Default select example" @bind="transactionType">

            @if(accountSelected is MonetaryAccount)
            {
                <option value="@TypeEnum.Income">@TypeEnum.Income</option>
                <option value="@TypeEnum.Outcome">@TypeEnum.Outcome</option>
            }

            else
            {
                <option value="@TypeEnum.Outcome">@TypeEnum.Outcome</option>
            }

        </select>
    </div>

    <br />
    <div>
        <label for="title">Currency Type</label>
        <select class="form-select" aria-label="Default select example" @bind="categoryId">
            @foreach (var category in myCategories)
            {
                <option value="@category.CategoryId">@category.Name</option>
            }
        </select>
    </div>

    <br />

    <button type="button" class="btn btn-primary" @onclick="SaveChanges">Guardar cambios</button>
    <a href="/Transactions">Cancelar</a>
</form>


@code
{

    private string title;
    private decimal amount;
    private DateTime creationDate;
    private CurrencyEnum currencyType;
    private TypeEnum transactionType;
    private int categoryId;

    private Category category;
    private Account accountSelected;
    private List<Category> myCategories;
    private Transaction transactionToAdd;

    [Parameter]
    public int accountId { get; set; }

    [CascadingParameter]
    public User mainUser { get; set; }

    protected override void OnInitialized()
    {
        transactionType = TypeEnum.Outcome;
        creationDate = DateTime.Now.Date;
        accountSelected = mainUser.MyAccounts[accountId];
        myCategories = mainUser.GetCategories();
    }

    private void SaveChanges()
    {
        if(accountSelected.Currency == CurrencyEnum.USA) 
        {
            Transaction.CheckExistenceOfExchange(creationDate, mainUser.GetExchangesHistory());
        }
        category = myCategories[categoryId];
        transactionToAdd = new Transaction(title, amount, creationDate, accountSelected.Currency, transactionType, category);
        accountSelected.AddTransaction(transactionToAdd);
        accountSelected.UpdateAccountMoneyAfterAdd(transactionToAdd);
        NavigationManager.NavigateTo($"/Transactions/{accountId}");
    }

    string GetFormattedDate(DateTime date)
    {
        return date.ToString("dd/MM/yyyy");
    }

}
