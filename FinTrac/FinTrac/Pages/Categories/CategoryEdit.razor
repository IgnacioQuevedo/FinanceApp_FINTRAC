@page "/Category/{categoryId:int}/Edit"
@using BusinessLogic.Category_Components;
@using BusinessLogic.Enums;
@layout MainLayout

@inject  ICategoryController CategoryController;


<head>
    <h1>CategoryEdit</h1>
</head>

<form>
    <div class="form-group">
        <label for="title">Título</label>
        <input type="text" class="form-control" id="title" @bind="name" />
    </div>
    <br />
    <div>

        <label for="Status">Status</label>
        <select class="form-select" aria-label="Default select example" @bind="status">

            <option value="@StatusEnum.Enabled">@StatusEnum.Enabled</option>
            <option value="@StatusEnum.Disabled">@StatusEnum.Disabled</option>
        </select>
    </div>
</form>
<br>

<div>

    <button type="button" class="btn btn-primary" @onclick="SaveChanges">Guardar cambios</button>
    <a href="/Category">Cancelar</a>

</div>
<br>
<br />

<div>
    @if (ErrorAlert.isError)
    {
        <ErrorAlert errorTxt="@errorTxt" />
    }
</div>



@code
{

    [Parameter]
    public int categoryId { get; set; }

    [CascadingParameter]
    public UserDTO userConnected { get; set; }


    private string name;
    private StatusEnum status;
    private Category categoryToEdit;
    private CategoryDTO categoryUpdated;
    public string errorTxt { get; set; }

    protected override void OnInitialized()
    {
        categoryToEdit = CategoryController.FindCategory(categoryId);
        name = categoryToEdit.Name;
        status = categoryToEdit.Status;
        ErrorAlert.isError = false;
        SuccesAlert.IsSucess = false;
    }

    public void SaveChanges()
    {
        try
        {
            categoryUpdated = new CategoryDTO(name, status, categoryToEdit.Type,userConnected.UserId);
            categoryUpdated.CategoryId = categoryId;
            
            CategoryController.UpdateCategory(categoryUpdated);
            NavigationManager.NavigateTo("/Category");
        }
        catch (Exception ExceptionCategory)
        {
            ErrorAlert.isError = true;
            errorTxt = ExceptionCategory.Message;
        }

    }
}
